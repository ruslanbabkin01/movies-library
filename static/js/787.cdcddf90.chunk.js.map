{"version":3,"file":"static/js/787.cdcddf90.chunk.js","mappings":"4RAOMA,EAAU,mCAIT,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,wGACkBC,EAAAA,GAAAA,IAAA,oCACQF,IAF1B,uBACGG,EADH,EACGA,KAGAC,EAAYD,EAAZC,QAJH,kBAKEA,GALF,kEAQA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,gGAAgDC,EAAhD,+BAAuD,EAAvD,SACkBL,EAAAA,GAAAA,IAAA,gCACIF,EADJ,kBACqBM,EADrB,iBACmCC,IAFrD,uBACGJ,EADH,EACGA,KAGAC,EAAYD,EAAZC,QAJH,kBAKEA,GALF,mEAQA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,yFACkBP,EAAAA,GAAAA,IAAA,iBACXO,EADW,oBACQT,IAF1B,uBACGG,EADH,EACGA,KADH,kBAIEA,GAJF,kEAOA,SAAeO,EAAtB,+CAAO,OAAP,oBAAO,WAAgCD,GAAhC,2FACkBP,EAAAA,GAAAA,IAAA,iBACXO,EADW,4BACgBT,IAFlC,uBACGG,EADH,EACGA,KAGAQ,EAASR,EAATQ,KAJH,kBAKEA,GALF,kEAQA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAgCH,GAAhC,2FACkBP,EAAAA,GAAAA,IAAA,iBACXO,EADW,4BACgBT,IAFlC,uBACGG,EADH,EACGA,KAGAC,EAAYD,EAAZC,QAJH,kBAKEA,GALF,kEAjCPF,EAAAA,GAAAA,SAAAA,QAAA,8B,wJCHe,SAASW,IACtB,IAAQJ,GAAYK,EAAAA,EAAAA,MAAZL,QACR,GAAoCM,EAAAA,EAAAA,UAAkB,IAAtD,eAAOC,EAAP,KAAmBC,EAAnB,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAEuBR,EAAAA,EAAAA,IAAiBD,GAFxC,OAEUN,EAFV,OAGIc,EAAcd,GAHlB,gDAKIgB,QAAQC,IAAR,MALJ,0DADc,uBAAC,WAAD,wBASdC,EACD,GAAE,CAACZ,KAGF,8BACGO,IACC,+BACE,eAAIM,UAAU,0CAAd,SACGN,GACCA,EAAWO,KACT,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,KAAMC,EAA3B,EAA2BA,UAAWC,EAAtC,EAAsCA,cAAtC,OACE,gBACEN,UAAU,yCADZ,WAIE,gBACEA,UAAU,oBACVO,IACEJ,EAAY,6CAC8BA,GACtCK,EAENC,IAAKL,KAEP,iBAAKJ,UAAU,MAAf,WACE,mCACA,iBAAMA,UAAU,YAAhB,gBAA6BI,QAA7B,IAA6BA,EAAAA,EAAQE,KACrC,wCACA,iBAAMN,UAAU,YAAhB,SAA6BK,SAf1BH,EAHT,SA4Bf,C","sources":["api/themoviedbAPI.ts","components/Cast.tsx"],"sourcesContent":["import { IResponseReviews, IRewiew } from './../types/reviews';\nimport { ICastResponse, ICast } from './../types/cast';\nimport { IMovie } from './../types/movie';\nimport axios from 'axios';\nimport { IServerResponse, IMovies } from 'types/movies';\n\n// const API_KEY = process.env.REACT_APP_API_KEY;\nconst API_KEY = '13d1d6108716c95692977ae4bce9cff7';\n\naxios.defaults.baseURL = `https://api.themoviedb.org/3`;\n\nexport async function fetchTrendMovies() {\n  const { data } = await axios.get<IServerResponse<IMovies>>(\n    `/trending/all/day?api_key=${API_KEY}`\n  );\n  const { results } = data;\n  return results;\n}\n\nexport async function fetchSearchMovies(query: string, page = 1) {\n  const { data } = await axios.get<IServerResponse<IMovies>>(\n    `/search/movie?api_key=${API_KEY}&query=${query}&page=${page}`\n  );\n  const { results } = data;\n  return results;\n}\n\nexport async function fetchAboutMovie(movieId: string | undefined) {\n  const { data } = await axios.get<IMovie>(\n    `/movie/${movieId}?api_key=${API_KEY}`\n  );\n  return data;\n}\n\nexport async function fetchActorsMovie(movieId: string | undefined) {\n  const { data } = await axios.get<ICastResponse<ICast>>(\n    `/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  const { cast } = data;\n  return cast;\n}\n\nexport async function fetchReviewMovie(movieId: string | undefined) {\n  const { data } = await axios.get<IResponseReviews<IRewiew>>(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  const { results } = data;\n  return results;\n}\n","import { fetchActorsMovie } from '../api/themoviedbAPI';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport defAvatar from '../images/defAvatar.jpeg';\nimport { ICast } from 'types/cast';\n\nexport default function Cast() {\n  const { movieId } = useParams();\n  const [actorsList, setActorsList] = useState<ICast[]>([]);\n\n  useEffect(() => {\n    async function fetchMovie() {\n      try {\n        const data = await fetchActorsMovie(movieId);\n        setActorsList(data);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    fetchMovie();\n  }, [movieId]);\n\n  return (\n    <>\n      {actorsList && (\n        <>\n          <ul className=\"flex flex-wrap gap-3 p-3 justify-center\">\n            {actorsList &&\n              actorsList.map(\n                ({ id, profile_path, name, character, original_name }) => (\n                  <li\n                    className=\"flex flex-col basis-1/6 rounded border\"\n                    key={id}\n                  >\n                    <img\n                      className=\"grow object-cover\"\n                      src={\n                        profile_path\n                          ? `https://image.tmdb.org/t/p/original${profile_path}`\n                          : defAvatar\n                      }\n                      alt={name}\n                    />\n                    <div className=\"p-2\">\n                      <h4>Name:</h4>\n                      <span className=\"font-bold\">{name ?? original_name}</span>\n                      <h4>Character:</h4>\n                      <span className=\"font-bold\">{character}</span>\n                    </div>\n                  </li>\n                )\n              )}\n          </ul>\n        </>\n      )}\n    </>\n  );\n}\n"],"names":["API_KEY","fetchTrendMovies","axios","data","results","fetchSearchMovies","query","page","fetchAboutMovie","movieId","fetchActorsMovie","cast","fetchReviewMovie","Cast","useParams","useState","actorsList","setActorsList","useEffect","console","log","fetchMovie","className","map","id","profile_path","name","character","original_name","src","defAvatar","alt"],"sourceRoot":""}