{"version":3,"file":"static/js/736.557575e5.chunk.js","mappings":"mTAGMA,EAAU,mCAIT,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,sGACkBC,EAAAA,GAAAA,IAAA,oCAAuCF,IADzD,cACCG,EADD,OAEGC,EAAYD,EAASE,KAArBD,QAFH,kBAGEA,GAHF,kEAMA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,8FAAwCC,EAAxC,+BAA+C,EAA/C,SACkBN,EAAAA,GAAAA,IAAA,gCACIF,EADJ,kBACqBO,EADrB,iBACmCC,IAFrD,cACCL,EADD,OAIGC,EAAYD,EAASE,KAArBD,QAJH,kBAKEA,GALF,mEAQA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,yFACkBR,EAAAA,GAAAA,IAAA,iBAAoBQ,EAApB,oBAAuCV,IADzD,uBACGK,EADH,EACGA,KADH,kBAEEA,GAFF,kEAKA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAAgCD,GAAhC,yFACkBR,EAAAA,GAAAA,IAAA,iBACXQ,EADW,4BACgBV,IAFlC,cACCG,EADD,OAIGS,EAAST,EAASE,KAAlBO,KAJH,kBAKEA,GALF,kEAQA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAgCH,GAAhC,yFACkBR,EAAAA,GAAAA,IAAA,iBACXQ,EADW,4BACgBV,IAFlC,cACCG,EADD,OAIGC,EAAYD,EAASE,KAArBD,QAJH,kBAKEA,GALF,kEA7BPF,EAAAA,GAAAA,SAAAA,QAAA,8B,uKCHaY,EAAaC,EAAAA,GAAAA,GAAH,8FAOVC,EAAQD,EAAAA,GAAAA,GAAH,6GAMLE,EAAOF,EAAAA,GAAAA,IAAH,yDAKJG,EAAYH,EAAAA,GAAAA,IAAH,yC,mBCdP,SAASI,IACtB,IAAQT,GAAYU,EAAAA,EAAAA,MAAZV,QACR,GAAoCW,EAAAA,EAAAA,UAAS,MAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAEuBb,EAAAA,EAAAA,IAAiBD,GAFxC,OAEUL,EAFV,OAGIkB,EAAclB,GAHlB,gDAKIoB,QAAQC,IAAR,MALJ,0DADc,uBAAC,WAAD,wBASdC,EACD,GAAE,CAACjB,KAGF,8BACGY,IACC,+BACE,SAACR,EAAD,UACGQ,GACCA,EAAWM,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,KAAMC,EAA3B,EAA2BA,UAA3B,OACb,UAAChB,EAAD,YACE,SAACC,EAAD,CACEgB,IACEH,EAAY,6CAC8BA,GACtCI,EAENC,IAAKJ,KAEP,UAACb,EAAD,YACE,mCACA,0BAAOa,KACP,wCACA,0BAAOC,SAbCH,EADC,SAuB5B,C","sources":["api/themoviedbAPI.js","components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\n// const API_KEY = process.env.REACT_APP_API_KEY;\nconst API_KEY = '13d1d6108716c95692977ae4bce9cff7';\n\naxios.defaults.baseURL = `https://api.themoviedb.org/3`;\n\nexport async function fetchTrendMovies() {\n  const response = await axios.get(`/trending/all/day?api_key=${API_KEY}`);\n  const { results } = response.data;\n  return results;\n}\n\nexport async function fetchSearchMovies(query, page = 1) {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${query}&page=${page}`\n  );\n  const { results } = response.data;\n  return results;\n}\n\nexport async function fetchAboutMovie(movieId) {\n  const { data } = await axios.get(`/movie/${movieId}?api_key=${API_KEY}`);\n  return data;\n}\n\nexport async function fetchActorsMovie(movieId) {\n  const response = await axios.get(\n    `/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  const { cast } = response.data;\n  return cast;\n}\n\nexport async function fetchReviewMovie(movieId) {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  const { results } = response.data;\n  return results;\n}\n","import styled from 'styled-components';\n\nexport const ActorsList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  padding: 12px;\n  gap: 12px;\n`;\n\nexport const Actor = styled.li`\n  display: flex;\n  flex-direction: column;\n  flex-basis: calc((100% - 50px) / 5);\n`;\n\nexport const Foto = styled.img`\n  width: 100%;\n  flex-grow: 1;\n`;\n\nexport const ActorInfo = styled.div`\n  padding: 8px;\n`;\n\n","import { fetchActorsMovie } from '../../api/themoviedbAPI';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { ActorsList, Actor, Foto, ActorInfo } from './Cast.styled';\nimport avatar from '../../images/no-ava.jpeg';\n\nexport default function Cast() {\n  const { movieId } = useParams();\n  const [actorsList, setActorsList] = useState(null);\n\n  useEffect(() => {\n    async function fetchMovie() {\n      try {\n        const data = await fetchActorsMovie(movieId);\n        setActorsList(data);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    fetchMovie();\n  }, [movieId]);\n\n  return (\n    <>\n      {actorsList && (\n        <>\n          <ActorsList>\n            {actorsList &&\n              actorsList.map(({ id, profile_path, name, character }) => (\n                <Actor key={id}>\n                  <Foto\n                    src={\n                      profile_path\n                        ? `https://image.tmdb.org/t/p/original${profile_path}`\n                        : avatar\n                    }\n                    alt={name}\n                  />\n                  <ActorInfo>\n                    <h4>Name:</h4>\n                    <span>{name}</span>\n                    <h4>Character:</h4>\n                    <span>{character}</span>\n                  </ActorInfo>\n                </Actor>\n              ))}\n          </ActorsList>\n        </>\n      )}\n    </>\n  );\n}\n"],"names":["API_KEY","fetchTrendMovies","axios","response","results","data","fetchSearchMovies","query","page","fetchAboutMovie","movieId","fetchActorsMovie","cast","fetchReviewMovie","ActorsList","styled","Actor","Foto","ActorInfo","Cast","useParams","useState","actorsList","setActorsList","useEffect","console","log","fetchMovie","map","id","profile_path","name","character","src","avatar","alt"],"sourceRoot":""}