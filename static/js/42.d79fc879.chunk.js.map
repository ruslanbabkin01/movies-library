{"version":3,"file":"static/js/42.d79fc879.chunk.js","mappings":"2RAOMA,EAAU,mCAIT,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,wGACkBC,EAAAA,GAAAA,IAAA,oCACQF,IAF1B,uBACGG,EADH,EACGA,KAGAC,EAAYD,EAAZC,QAJH,kBAKEA,GALF,kEAQA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,gGAAgDC,EAAhD,+BAAuD,EAAvD,SACkBL,EAAAA,GAAAA,IAAA,gCACIF,EADJ,kBACqBM,EADrB,iBACmCC,IAFrD,uBACGJ,EADH,EACGA,KAGAC,EAAYD,EAAZC,QAJH,kBAKEA,GALF,mEAQA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,yFACkBP,EAAAA,GAAAA,IAAA,iBACXO,EADW,oBACQT,IAF1B,uBACGG,EADH,EACGA,KADH,kBAIEA,GAJF,kEAOA,SAAeO,EAAtB,+CAAO,OAAP,oBAAO,WAAgCD,GAAhC,2FACkBP,EAAAA,GAAAA,IAAA,iBACXO,EADW,4BACgBT,IAFlC,uBACGG,EADH,EACGA,KAGAQ,EAASR,EAATQ,KAJH,kBAKEA,GALF,kEAQA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAgCH,GAAhC,2FACkBP,EAAAA,GAAAA,IAAA,iBACXO,EADW,4BACgBT,IAFlC,uBACGG,EADH,EACGA,KAGAC,EAAYD,EAAZC,QAJH,kBAKEA,GALF,kEAjCPF,EAAAA,GAAAA,SAAAA,QAAA,8B,8ICJe,SAASW,IACtB,IAAQJ,GAAYK,EAAAA,EAAAA,MAAZL,QACR,GAA8BM,EAAAA,EAAAA,UAAoB,IAAlD,eAAOC,EAAP,KAAgBC,EAAhB,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAEuBN,EAAAA,EAAAA,IAAiBH,GAFxC,OAEUN,EAFV,OAGIc,EAAWd,GAHf,gDAKIgB,QAAQC,IAAR,MALJ,0DADc,uBAAC,WAAD,wBASdC,EACD,GAAE,CAACZ,KAGF,8BACGO,EAAQM,OAAS,GAChB,eAAIC,UAAU,gCAAd,SACGP,EAAQQ,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,gBAAIJ,UAAU,OAAd,WACE,gBAAIA,UAAU,OAAd,qBACS,iBAAMA,UAAU,mBAAhB,SAAoCG,QAE7C,cAAGH,UAAU,qBAAb,SAAmCI,MAJXF,EADf,OAUf,cAAGF,UAAU,+BAAb,sDAMP,C","sources":["api/themoviedbAPI.ts","components/Reviews.tsx"],"sourcesContent":["import { IResponseReviews, IRewiew } from './../types/reviews';\nimport { ICastResponse, ICast } from './../types/cast';\nimport { IMovie } from './../types/movie';\nimport axios from 'axios';\nimport { IServerResponse, IMovies } from 'types/movies';\n\n// const API_KEY = process.env.REACT_APP_API_KEY;\nconst API_KEY = '13d1d6108716c95692977ae4bce9cff7';\n\naxios.defaults.baseURL = `https://api.themoviedb.org/3`;\n\nexport async function fetchTrendMovies() {\n  const { data } = await axios.get<IServerResponse<IMovies>>(\n    `/trending/all/day?api_key=${API_KEY}`\n  );\n  const { results } = data;\n  return results;\n}\n\nexport async function fetchSearchMovies(query: string, page = 1) {\n  const { data } = await axios.get<IServerResponse<IMovies>>(\n    `/search/movie?api_key=${API_KEY}&query=${query}&page=${page}`\n  );\n  const { results } = data;\n  return results;\n}\n\nexport async function fetchAboutMovie(movieId: string | undefined) {\n  const { data } = await axios.get<IMovie>(\n    `/movie/${movieId}?api_key=${API_KEY}`\n  );\n  return data;\n}\n\nexport async function fetchActorsMovie(movieId: string | undefined) {\n  const { data } = await axios.get<ICastResponse<ICast>>(\n    `/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  const { cast } = data;\n  return cast;\n}\n\nexport async function fetchReviewMovie(movieId: string | undefined) {\n  const { data } = await axios.get<IResponseReviews<IRewiew>>(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  const { results } = data;\n  return results;\n}\n","import { fetchReviewMovie } from '../api/themoviedbAPI';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { IRewiew } from 'types/reviews';\n\nexport default function Reviews() {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState<IRewiew[]>([]);\n\n  useEffect(() => {\n    async function fetchMovie() {\n      try {\n        const data = await fetchReviewMovie(movieId);\n        setReviews(data);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    fetchMovie();\n  }, [movieId]);\n\n  return (\n    <>\n      {reviews.length > 0 ? (\n        <ul className=\"flex flex-col gap-5 py-0 px-4\">\n          {reviews.map(({ id, author, content }) => (\n            <li className=\"p-1 \" key={id}>\n              <h4 className=\"mb-2\">\n                Author:<span className=\"ml-2 font-medium\">{author}</span>\n              </h4>\n              <p className=\"mb-2 tracking-wide\">{content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p className=\"m-3 text-center text-red-500\">\n          We dont have any reviews for this movie\n        </p>\n      )}\n    </>\n  );\n}\n"],"names":["API_KEY","fetchTrendMovies","axios","data","results","fetchSearchMovies","query","page","fetchAboutMovie","movieId","fetchActorsMovie","cast","fetchReviewMovie","Reviews","useParams","useState","reviews","setReviews","useEffect","console","log","fetchMovie","length","className","map","id","author","content"],"sourceRoot":""}