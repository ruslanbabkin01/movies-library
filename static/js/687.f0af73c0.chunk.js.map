{"version":3,"file":"static/js/687.f0af73c0.chunk.js","mappings":"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","sources":["api/themoviedbAPI.ts","components/MovieCard.tsx","pages/MovieDetails.tsx"],"sourcesContent":["import { IResponseReviews, IRewiew } from './../types/reviews';\nimport { ICastResponse, ICast } from './../types/cast';\nimport { IMovie } from './../types/movie';\nimport axios from 'axios';\nimport { IServerResponse, IMovies } from 'types/movies';\n\n// const API_KEY = process.env.REACT_APP_API_KEY;\nconst API_KEY = '13d1d6108716c95692977ae4bce9cff7';\n\naxios.defaults.baseURL = `https://api.themoviedb.org/3`;\n\nexport async function fetchTrendMovies() {\n  const { data } = await axios.get<IServerResponse<IMovies>>(\n    `/trending/all/day?api_key=${API_KEY}`\n  );\n  const { results } = data;\n  return results;\n}\n\nexport async function fetchSearchMovies(query: string, page = 1) {\n  const { data } = await axios.get<IServerResponse<IMovies>>(\n    `/search/movie?api_key=${API_KEY}&query=${query}&page=${page}`\n  );\n  const { results } = data;\n  return results;\n}\n\nexport async function fetchAboutMovie(movieId: string | undefined) {\n  const { data } = await axios.get<IMovie>(\n    `/movie/${movieId}?api_key=${API_KEY}`\n  );\n  return data;\n}\n\nexport async function fetchActorsMovie(movieId: string | undefined) {\n  const { data } = await axios.get<ICastResponse<ICast>>(\n    `/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  const { cast } = data;\n  return cast;\n}\n\nexport async function fetchReviewMovie(movieId: string | undefined) {\n  const { data } = await axios.get<IResponseReviews<IRewiew>>(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  const { results } = data;\n  return results;\n}\n","import { IMovie } from 'types/movie';\nimport defMovie from '../images/defMovie.webp';\n\ninterface IModvieCardProps {\n  movie: IMovie;\n}\n\nexport const MovieCard = ({\n  movie: { poster_path, title, vote_average, overview, release_date, genres },\n}: IModvieCardProps) => (\n  <div className=\"flex p-5 w-9/12 ml-5\">\n    <img\n      className=\"w-80 object-cover\"\n      src={\n        poster_path\n          ? `https://image.tmdb.org/t/p/original${poster_path}`\n          : defMovie\n      }\n      alt={title}\n    />\n    <div className=\"ml-5\">\n      <h2 className=\"font-bold text-2xl\">\n        {title}\n        <span>({Number.parseInt(release_date)})</span>\n      </h2>\n      <p className=\"my-5 mx-0 font-semibold\">\n        Rating: <span className=\"text-red-500\">{vote_average.toFixed(1)}</span>\n      </p>\n      <h3 className=\"text-lg font-semibold \">Owerview</h3>\n      <p className=\"my-5 mx-0\">{overview}</p>\n      <h4 className=\"font-semibold text-lg\">Genres</h4>\n      <p className=\"my-5 mx-0\">{genres.map(({ name }) => name).join('  ')}</p>\n    </div>\n  </div>\n);\n","import { Outlet, useParams, useLocation, NavLink } from 'react-router-dom';\nimport { Suspense, useEffect, useState } from 'react';\nimport { fetchAboutMovie } from '../api/themoviedbAPI';\nimport { MovieCard } from 'components/MovieCard';\nimport { Loader } from 'components/Loader';\nimport { IMovie } from 'types/movie';\n\nexport default function MovieDetails() {\n  const [movie, setMovie] = useState<IMovie>();\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/movies';\n\n  useEffect(() => {\n    async function fetchMovie() {\n      try {\n        const data = await fetchAboutMovie(movieId);\n        setMovie(data);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    fetchMovie();\n  }, [movieId]);\n\n  const activeStyle = {\n    background: 'red',\n    color: 'white',\n  };\n\n  return (\n    <>\n      <NavLink\n        className=\"text-black bg-blue-500 border bg-blue px-8 py-2 mt-5 ml-5 rounded-lg cursor-pointer hover:text-white hover:bg-red-500 focus:text-white focus:bg-red-500\"\n        to={backLinkHref}\n      >\n        Back\n      </NavLink>\n      {movie && <MovieCard movie={movie} />}\n      <h2 className=\"p-2 mb-5 text-center font-semibold text-lg\">\n        Additional information\n      </h2>\n      <ul className=\"flex justify-center mb-5\">\n        <li className=\"mx-5\">\n          <NavLink\n            style={({ isActive }) => (isActive ? activeStyle : undefined)}\n            className=\"text-white bg-blue-500 p-2 py-3 px-8 my-3 mx-5 rounded-lg cursor-pointer\"\n            to=\"cast\"\n          >\n            Cast\n          </NavLink>\n        </li>\n        <li className=\"mx-5\">\n          <NavLink\n            style={({ isActive }) => (isActive ? activeStyle : undefined)}\n            className=\"text-white bg-blue-500 py-3 px-8 my-3 mx-5 rounded-lg cursor-pointer\"\n            to=\"reviews\"\n          >\n            Reviews\n          </NavLink>\n        </li>\n      </ul>\n\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n}\n"],"names":["API_KEY","fetchTrendMovies","axios","data","results","fetchSearchMovies","query","page","fetchAboutMovie","movieId","fetchActorsMovie","cast","fetchReviewMovie","MovieCard","movie","poster_path","title","vote_average","overview","release_date","genres","className","src","defMovie","alt","Number","parseInt","toFixed","map","name","join","MovieDetails","useState","setMovie","useParams","backLinkHref","useLocation","state","from","useEffect","console","log","fetchMovie","activeStyle","background","color","to","style","isActive","undefined","Suspense","fallback","Loader"],"sourceRoot":""}