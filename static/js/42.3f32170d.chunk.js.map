{"version":3,"file":"static/js/42.3f32170d.chunk.js","mappings":"sRAMMA,E,QAAaC,GAAAA,OAAa,CAC9BC,QAAS,iCAGLC,EAAUC,CAAAA,SAAAA,aAAAA,WAAAA,kBAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,GAAYC,kBAErB,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,wGACkBN,EAAU,oCACFG,IAF1B,uBACGI,EADH,EACGA,KAGAC,EAAYD,EAAZC,QAJH,kBAKEA,GALF,kEAQA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,gGAAgDC,EAAhD,+BAAuD,EAAvD,SACkBX,EAAU,gCACNG,EADM,kBACWO,EADX,iBACyBC,IAFrD,uBACGJ,EADH,EACGA,KAGAC,EAAYD,EAAZC,QAJH,kBAKEA,GALF,mEAQA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,yFACkBb,EAAU,iBACrBa,EADqB,oBACFV,IAF1B,uBACGI,EADH,EACGA,KADH,kBAIEA,GAJF,kEAOA,SAAeO,EAAtB,+CAAO,OAAP,oBAAO,WAAgCD,GAAhC,2FACkBb,EAAU,iBACrBa,EADqB,4BACMV,IAFlC,uBACGI,EADH,EACGA,KAGAQ,EAASR,EAATQ,KAJH,kBAKEA,GALF,kEAQA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAgCH,GAAhC,2FACkBb,EAAU,iBACrBa,EADqB,4BACMV,IAFlC,uBACGI,EADH,EACGA,KAGAC,EAAYD,EAAZC,QAJH,kBAKEA,GALF,kE,+JCpCQ,SAASS,IACtB,IAAQJ,GAAYK,EAAAA,EAAAA,MAAZL,QACR,GAA8BM,EAAAA,EAAAA,UAAoB,IAAlD,eAAOC,EAAP,KAAgBC,EAAhB,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,gHAEuBN,EAAAA,EAAAA,IAAiBH,GAFxC,OAEUN,EAFV,OAGIc,EAAWd,GAHf,gDAKUgB,EALV,KAMIC,QAAQC,IAAIF,EAAMG,SAClBC,EAAAA,GAAAA,MAAYJ,EAAMG,SAPtB,0DADc,uBAAC,WAAD,wBAWdE,EACD,GAAE,CAACf,KAGF,8BACGO,EAAQS,OAAS,GAChB,eAAIC,UAAU,yCAAd,SACGV,EAAQW,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,gBAAIJ,UAAU,OAAd,WACE,gBAAIA,UAAU,OAAd,qBACS,iBAAMA,UAAU,mBAAhB,SAAoCG,QAE7C,cAAGH,UAAU,qBAAb,SAAmCI,MAJXF,EADf,OAUf,cAAGF,UAAU,uDAAb,sDAMP,C","sources":["api/themoviedbAPI.ts","components/Reviews.tsx"],"sourcesContent":["import { IResponseReviews, IReview } from './../types/reviews';\nimport { ICastResponse, ICast } from './../types/cast';\nimport { IMovie } from './../types/movie';\nimport axios from 'axios';\nimport { IServerResponse, IMovies } from 'types/movies';\n\nconst TheMovieDb = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n});\n\nconst API_KEY = process.env.REACT_APP_API_KEY;\n\nexport async function fetchTrendMovies() {\n  const { data } = await TheMovieDb<IServerResponse<IMovies>>(\n    `/trending/all/day?api_key=${API_KEY}`\n  );\n  const { results } = data;\n  return results;\n}\n\nexport async function fetchSearchMovies(query: string, page = 1) {\n  const { data } = await TheMovieDb<IServerResponse<IMovies>>(\n    `/search/movie?api_key=${API_KEY}&query=${query}&page=${page}`\n  );\n  const { results } = data;\n  return results;\n}\n\nexport async function fetchAboutMovie(movieId: string | undefined) {\n  const { data } = await TheMovieDb<IMovie>(\n    `/movie/${movieId}?api_key=${API_KEY}`\n  );\n  return data;\n}\n\nexport async function fetchActorsMovie(movieId: string | undefined) {\n  const { data } = await TheMovieDb<ICastResponse<ICast>>(\n    `/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  const { cast } = data;\n  return cast;\n}\n\nexport async function fetchReviewMovie(movieId: string | undefined) {\n  const { data } = await TheMovieDb<IResponseReviews<IReview>>(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  const { results } = data;\n  return results;\n}\n","import { AxiosError } from 'axios';\nimport { fetchReviewMovie } from '../api/themoviedbAPI';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { IReview } from 'types/reviews';\n\nexport default function Reviews() {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState<IReview[]>([]);\n\n  useEffect(() => {\n    async function fetchMovie() {\n      try {\n        const data = await fetchReviewMovie(movieId);\n        setReviews(data);\n      } catch (e: unknown) {\n        const error = e as AxiosError;\n        console.log(error.message);\n        toast.error(error.message);\n      }\n    }\n    fetchMovie();\n  }, [movieId]);\n\n  return (\n    <>\n      {reviews.length > 0 ? (\n        <ul className=\"flex flex-col gap-5 py-0 px-4 md:px-16\">\n          {reviews.map(({ id, author, content }) => (\n            <li className=\"p-1 \" key={id}>\n              <h4 className=\"mb-2\">\n                Author:<span className=\"ml-2 font-medium\">{author}</span>\n              </h4>\n              <p className=\"mb-2 tracking-wide\">{content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p className=\"m-3  text-2xl font-semibold text-center text-red-500\">\n          We dont have any reviews for this movie\n        </p>\n      )}\n    </>\n  );\n}\n"],"names":["TheMovieDb","axios","baseURL","API_KEY","process","REACT_APP_API_KEY","fetchTrendMovies","data","results","fetchSearchMovies","query","page","fetchAboutMovie","movieId","fetchActorsMovie","cast","fetchReviewMovie","Reviews","useParams","useState","reviews","setReviews","useEffect","error","console","log","message","toast","fetchMovie","length","className","map","id","author","content"],"sourceRoot":""}